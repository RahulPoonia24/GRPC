
syntax = "proto3";

package calculator;
option go_package = "./calculator/calculatorpb";

message SumRequest{
    int32 first_number = 1;
    int32 last_number = 2;
}

message SumResponse {
    int32 result = 1;
}

message PrimeDecompositionRequest{
    int32 number = 1;
}

message PrimeDecompositionResponse {
    int32 result = 1;
}

message ComputeAverageRequest{
    float number = 1;
}

message ComputeAverageResponse {
    float result = 1;
}
message FindMaximumRequest{
    int32 number = 1;
}

message FindMaximumResponse {
    int32 result = 1;
}

message squareRootRequest{
    int32 number = 1;
}

message squareRootResponse {
    double number_root = 1;
}

service CalculatorService{
    // Unary sum
    rpc Sum(SumRequest) returns (SumResponse) {};

    //server stream prime decomposition
    rpc PrimDecom(PrimeDecompositionRequest) returns ( stream PrimeDecompositionResponse) {};

    //client stream for computing average prime decomposition
    rpc ComputeAverage(stream ComputeAverageRequest) returns ( ComputeAverageResponse) {};

    //bidi stream for finding maximum elements in current array
    rpc FindMaximum (stream FindMaximumRequest) returns ( stream FindMaximumResponse) {};

    //sqaure root
    //error handling this rpc will throufh error for negative number
    //error type will be invalid argument error
    rpc SquareRoot(squareRootRequest) returns (squareRootResponse) {};

}